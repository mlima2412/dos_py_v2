/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { PedidoCompraControllerFindOneQueryResponse, PedidoCompraControllerFindOnePathParams, PedidoCompraControllerFindOneHeaderParams, PedidoCompraControllerFindOne404 } from "../types/PedidoCompraControllerFindOne.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from "@tanstack/react-query";
import { queryOptions, useSuspenseQuery } from "@tanstack/react-query";

export const pedidoCompraControllerFindOneSuspenseQueryKey = (publicId: PedidoCompraControllerFindOnePathParams["publicId"]) => [{ url: '/pedido-compra/:publicId', params: {publicId:publicId} }] as const

export type PedidoCompraControllerFindOneSuspenseQueryKey = ReturnType<typeof pedidoCompraControllerFindOneSuspenseQueryKey>

/**
 * @summary Buscar pedido de compra por ID público
 * {@link /pedido-compra/:publicId}
 */
export async function pedidoCompraControllerFindOneSuspense(publicId: PedidoCompraControllerFindOnePathParams["publicId"], headers: PedidoCompraControllerFindOneHeaderParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<PedidoCompraControllerFindOneQueryResponse, ResponseErrorConfig<PedidoCompraControllerFindOne404>, unknown>({ method : "GET", url : `/pedido-compra/${publicId}`, ... requestConfig, headers : { ...headers, ...requestConfig.headers } })  
  return res.data
}

export function pedidoCompraControllerFindOneSuspenseQueryOptions(publicId: PedidoCompraControllerFindOnePathParams["publicId"], headers: PedidoCompraControllerFindOneHeaderParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const queryKey = pedidoCompraControllerFindOneSuspenseQueryKey(publicId)
  return queryOptions<PedidoCompraControllerFindOneQueryResponse, ResponseErrorConfig<PedidoCompraControllerFindOne404>, PedidoCompraControllerFindOneQueryResponse, typeof queryKey>({
   enabled: !!(publicId),
   queryKey,
   queryFn: async ({ signal }) => {
      config.signal = signal
      return pedidoCompraControllerFindOneSuspense(publicId, headers, config)
   },
  })
}

/**
 * @summary Buscar pedido de compra por ID público
 * {@link /pedido-compra/:publicId}
 */
export function usePedidoCompraControllerFindOneSuspense<TData = PedidoCompraControllerFindOneQueryResponse, TQueryKey extends QueryKey = PedidoCompraControllerFindOneSuspenseQueryKey>(publicId: PedidoCompraControllerFindOnePathParams["publicId"], headers: PedidoCompraControllerFindOneHeaderParams, options: 
{
  query?: Partial<UseSuspenseQueryOptions<PedidoCompraControllerFindOneQueryResponse, ResponseErrorConfig<PedidoCompraControllerFindOne404>, TData, TQueryKey>> & { client?: QueryClient },
  client?: Partial<RequestConfig> & { client?: typeof fetch }
}
 = {}) {
  const { query: queryConfig = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...queryOptions } = queryConfig
  const queryKey = queryOptions?.queryKey ?? pedidoCompraControllerFindOneSuspenseQueryKey(publicId)

  const query = useSuspenseQuery({
   ...pedidoCompraControllerFindOneSuspenseQueryOptions(publicId, headers, config),
   queryKey,
   ...queryOptions
  } as unknown as UseSuspenseQueryOptions, queryClient) as UseSuspenseQueryResult<TData, ResponseErrorConfig<PedidoCompraControllerFindOne404>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/fetch-client'
import type {
  CategoriaDespesasControllerFindOneQueryResponse,
  CategoriaDespesasControllerFindOnePathParams,
  CategoriaDespesasControllerFindOne401,
  CategoriaDespesasControllerFindOne404,
} from '../types/CategoriaDespesasControllerFindOne.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/fetch-client'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const categoriaDespesasControllerFindOneQueryKey = (id: CategoriaDespesasControllerFindOnePathParams['id']) =>
  [{ url: '/categoria-despesas/:id', params: { id: id } }] as const

export type CategoriaDespesasControllerFindOneQueryKey = ReturnType<typeof categoriaDespesasControllerFindOneQueryKey>

/**
 * @summary Buscar categoria de despesas por ID
 * {@link /categoria-despesas/:id}
 */
export async function categoriaDespesasControllerFindOne(
  id: CategoriaDespesasControllerFindOnePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    CategoriaDespesasControllerFindOneQueryResponse,
    ResponseErrorConfig<CategoriaDespesasControllerFindOne401 | CategoriaDespesasControllerFindOne404>,
    unknown
  >({ method: 'GET', url: `/categoria-despesas/${id}`, ...requestConfig })
  return res.data
}

export function categoriaDespesasControllerFindOneQueryOptions(
  id: CategoriaDespesasControllerFindOnePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const queryKey = categoriaDespesasControllerFindOneQueryKey(id)
  return queryOptions<
    CategoriaDespesasControllerFindOneQueryResponse,
    ResponseErrorConfig<CategoriaDespesasControllerFindOne401 | CategoriaDespesasControllerFindOne404>,
    CategoriaDespesasControllerFindOneQueryResponse,
    typeof queryKey
  >({
    enabled: !!id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return categoriaDespesasControllerFindOne(id, config)
    },
  })
}

/**
 * @summary Buscar categoria de despesas por ID
 * {@link /categoria-despesas/:id}
 */
export function useCategoriaDespesasControllerFindOne<
  TData = CategoriaDespesasControllerFindOneQueryResponse,
  TQueryData = CategoriaDespesasControllerFindOneQueryResponse,
  TQueryKey extends QueryKey = CategoriaDespesasControllerFindOneQueryKey,
>(
  id: CategoriaDespesasControllerFindOnePathParams['id'],
  options: {
    query?: Partial<
      QueryObserverOptions<
        CategoriaDespesasControllerFindOneQueryResponse,
        ResponseErrorConfig<CategoriaDespesasControllerFindOne401 | CategoriaDespesasControllerFindOne404>,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? categoriaDespesasControllerFindOneQueryKey(id)

  const query = useQuery(
    {
      ...categoriaDespesasControllerFindOneQueryOptions(id, config),
      queryKey,
      ...queryOptions,
    } as unknown as QueryObserverOptions,
    queryClient,
  ) as UseQueryResult<TData, ResponseErrorConfig<CategoriaDespesasControllerFindOne401 | CategoriaDespesasControllerFindOne404>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}

/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest, MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationResponse, MovimentoEstoqueControllerProcessarAjustesConferenciaLote400, MovimentoEstoqueControllerProcessarAjustesConferenciaLote404, MovimentoEstoqueControllerProcessarAjustesConferenciaLote409 } from "../types/MovimentoEstoqueControllerProcessarAjustesConferenciaLote.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import { useMutation } from "@tanstack/react-query";

export const movimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationKey = () =>   [{"url":"/movimento-estoque/ajuste-conferencia-lote"}] as const

export type MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationKey = ReturnType<typeof movimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationKey>

/**
 * @description Processa múltiplos ajustes de estoque baseados em uma conferência de estoque. Cria movimentos de ajuste para cada item com diferença diferente de zero, ignorando itens sem diferença.
 * @summary Processar ajustes de conferência em lote
 * {@link /movimento-estoque/ajuste-conferencia-lote}
 */
export async function movimentoEstoqueControllerProcessarAjustesConferenciaLote(data: MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest, config: Partial<RequestConfig<MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest>> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config

const requestData = data
const res = await request<MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationResponse, ResponseErrorConfig<MovimentoEstoqueControllerProcessarAjustesConferenciaLote400 | MovimentoEstoqueControllerProcessarAjustesConferenciaLote404 | MovimentoEstoqueControllerProcessarAjustesConferenciaLote409>, MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest>({ method : "POST", url : `/movimento-estoque/ajuste-conferencia-lote`, data : requestData, ... requestConfig })
return res.data
}

/**
 * @description Processa múltiplos ajustes de estoque baseados em uma conferência de estoque. Cria movimentos de ajuste para cada item com diferença diferente de zero, ignorando itens sem diferença.
 * @summary Processar ajustes de conferência em lote
 * {@link /movimento-estoque/ajuste-conferencia-lote}
 */
export function useMovimentoEstoqueControllerProcessarAjustesConferenciaLote<TContext>(options: 
  {
    mutation?: UseMutationOptions<MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationResponse, ResponseErrorConfig<MovimentoEstoqueControllerProcessarAjustesConferenciaLote400 | MovimentoEstoqueControllerProcessarAjustesConferenciaLote404 | MovimentoEstoqueControllerProcessarAjustesConferenciaLote409>, {data: MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest}, TContext> & { client?: QueryClient },
    client?: Partial<RequestConfig<MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest>> & { client?: typeof fetch },
  }
   = {}) {
  
          const { mutation = {}, client: config = {} } = options ?? {}
          const { client: queryClient, ...mutationOptions } = mutation;
          const mutationKey = mutationOptions.mutationKey ?? movimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationKey()
  
          return useMutation<MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationResponse, ResponseErrorConfig<MovimentoEstoqueControllerProcessarAjustesConferenciaLote400 | MovimentoEstoqueControllerProcessarAjustesConferenciaLote404 | MovimentoEstoqueControllerProcessarAjustesConferenciaLote409>, {data: MovimentoEstoqueControllerProcessarAjustesConferenciaLoteMutationRequest}, TContext>({
            mutationFn: async({ data }) => {
              return movimentoEstoqueControllerProcessarAjustesConferenciaLote(data, config)
            },
            mutationKey,
            ...mutationOptions
          }, queryClient)
      
}
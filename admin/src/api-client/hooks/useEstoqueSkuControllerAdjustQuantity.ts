/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { EstoqueSkuControllerAdjustQuantityMutationResponse, EstoqueSkuControllerAdjustQuantityPathParams, EstoqueSkuControllerAdjustQuantity400, EstoqueSkuControllerAdjustQuantity404 } from "../types/EstoqueSkuControllerAdjustQuantity.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, UseMutationResult, QueryClient } from "@tanstack/react-query";
import { mutationOptions, useMutation } from "@tanstack/react-query";

export const estoqueSkuControllerAdjustQuantityMutationKey = () => [{ url: '/estoque-sku/:localId/:skuId/ajustar/:adjustment' }] as const

export type EstoqueSkuControllerAdjustQuantityMutationKey = ReturnType<typeof estoqueSkuControllerAdjustQuantityMutationKey>

/**
 * @summary Ajustar quantidade em estoque (somar/subtrair)
 * {@link /estoque-sku/:localId/:skuId/ajustar/:adjustment}
 */
export async function estoqueSkuControllerAdjustQuantity(localId: EstoqueSkuControllerAdjustQuantityPathParams["localId"], skuId: EstoqueSkuControllerAdjustQuantityPathParams["skuId"], adjustment: EstoqueSkuControllerAdjustQuantityPathParams["adjustment"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<EstoqueSkuControllerAdjustQuantityMutationResponse, ResponseErrorConfig<EstoqueSkuControllerAdjustQuantity400 | EstoqueSkuControllerAdjustQuantity404>, unknown>({ method : "PATCH", url : `/estoque-sku/${localId}/${skuId}/ajustar/${adjustment}`, ... requestConfig })  
  return res.data
}

export function estoqueSkuControllerAdjustQuantityMutationOptions(config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const mutationKey = estoqueSkuControllerAdjustQuantityMutationKey()
  return mutationOptions<EstoqueSkuControllerAdjustQuantityMutationResponse, ResponseErrorConfig<EstoqueSkuControllerAdjustQuantity400 | EstoqueSkuControllerAdjustQuantity404>, {localId: EstoqueSkuControllerAdjustQuantityPathParams["localId"], skuId: EstoqueSkuControllerAdjustQuantityPathParams["skuId"], adjustment: EstoqueSkuControllerAdjustQuantityPathParams["adjustment"]}, typeof mutationKey>({
    mutationKey,
    mutationFn: async({ localId, skuId, adjustment }) => {
      return estoqueSkuControllerAdjustQuantity(localId, skuId, adjustment, config)
    },
  })
}

/**
 * @summary Ajustar quantidade em estoque (somar/subtrair)
 * {@link /estoque-sku/:localId/:skuId/ajustar/:adjustment}
 */
export function useEstoqueSkuControllerAdjustQuantity<TContext>(options: 
{
  mutation?: UseMutationOptions<EstoqueSkuControllerAdjustQuantityMutationResponse, ResponseErrorConfig<EstoqueSkuControllerAdjustQuantity400 | EstoqueSkuControllerAdjustQuantity404>, {localId: EstoqueSkuControllerAdjustQuantityPathParams["localId"], skuId: EstoqueSkuControllerAdjustQuantityPathParams["skuId"], adjustment: EstoqueSkuControllerAdjustQuantityPathParams["adjustment"]}, TContext> & { client?: QueryClient },
  client?: Partial<RequestConfig> & { client?: typeof fetch },
}
 = {}) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation;
  const mutationKey = mutationOptions.mutationKey ?? estoqueSkuControllerAdjustQuantityMutationKey()

  const baseOptions = estoqueSkuControllerAdjustQuantityMutationOptions(config) as UseMutationOptions<EstoqueSkuControllerAdjustQuantityMutationResponse, ResponseErrorConfig<EstoqueSkuControllerAdjustQuantity400 | EstoqueSkuControllerAdjustQuantity404>, {localId: EstoqueSkuControllerAdjustQuantityPathParams["localId"], skuId: EstoqueSkuControllerAdjustQuantityPathParams["skuId"], adjustment: EstoqueSkuControllerAdjustQuantityPathParams["adjustment"]}, TContext>

  return useMutation<EstoqueSkuControllerAdjustQuantityMutationResponse, ResponseErrorConfig<EstoqueSkuControllerAdjustQuantity400 | EstoqueSkuControllerAdjustQuantity404>, {localId: EstoqueSkuControllerAdjustQuantityPathParams["localId"], skuId: EstoqueSkuControllerAdjustQuantityPathParams["skuId"], adjustment: EstoqueSkuControllerAdjustQuantityPathParams["adjustment"]}, TContext>({
    ...baseOptions,
    mutationKey,
    ...mutationOptions,
  }, queryClient) as UseMutationResult<EstoqueSkuControllerAdjustQuantityMutationResponse, ResponseErrorConfig<EstoqueSkuControllerAdjustQuantity400 | EstoqueSkuControllerAdjustQuantity404>, {localId: EstoqueSkuControllerAdjustQuantityPathParams["localId"], skuId: EstoqueSkuControllerAdjustQuantityPathParams["skuId"], adjustment: EstoqueSkuControllerAdjustQuantityPathParams["adjustment"]}, TContext>
}
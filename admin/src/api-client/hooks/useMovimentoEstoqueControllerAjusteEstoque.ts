/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { MovimentoEstoqueControllerAjusteEstoqueMutationRequest, MovimentoEstoqueControllerAjusteEstoqueMutationResponse, MovimentoEstoqueControllerAjusteEstoque400, MovimentoEstoqueControllerAjusteEstoque404 } from "../types/MovimentoEstoqueControllerAjusteEstoque.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import { useMutation } from "@tanstack/react-query";

export const movimentoEstoqueControllerAjusteEstoqueMutationKey = () =>   [{"url":"/movimento-estoque/ajuste"}] as const

export type MovimentoEstoqueControllerAjusteEstoqueMutationKey = ReturnType<typeof movimentoEstoqueControllerAjusteEstoqueMutationKey>

/**
 * @description Endpoint específico para ajustes de estoque. Permite valores positivos (aumentar) ou negativos (diminuir) para corrigir divergências entre estoque físico e sistema
 * @summary Realizar ajuste de estoque
 * {@link /movimento-estoque/ajuste}
 */
export async function movimentoEstoqueControllerAjusteEstoque(data: MovimentoEstoqueControllerAjusteEstoqueMutationRequest, config: Partial<RequestConfig<MovimentoEstoqueControllerAjusteEstoqueMutationRequest>> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config

const requestData = data
const res = await request<MovimentoEstoqueControllerAjusteEstoqueMutationResponse, ResponseErrorConfig<MovimentoEstoqueControllerAjusteEstoque400 | MovimentoEstoqueControllerAjusteEstoque404>, MovimentoEstoqueControllerAjusteEstoqueMutationRequest>({ method : "POST", url : `/movimento-estoque/ajuste`, data : requestData, ... requestConfig })
return res.data
}

/**
 * @description Endpoint específico para ajustes de estoque. Permite valores positivos (aumentar) ou negativos (diminuir) para corrigir divergências entre estoque físico e sistema
 * @summary Realizar ajuste de estoque
 * {@link /movimento-estoque/ajuste}
 */
export function useMovimentoEstoqueControllerAjusteEstoque<TContext>(options: 
  {
    mutation?: UseMutationOptions<MovimentoEstoqueControllerAjusteEstoqueMutationResponse, ResponseErrorConfig<MovimentoEstoqueControllerAjusteEstoque400 | MovimentoEstoqueControllerAjusteEstoque404>, {data: MovimentoEstoqueControllerAjusteEstoqueMutationRequest}, TContext> & { client?: QueryClient },
    client?: Partial<RequestConfig<MovimentoEstoqueControllerAjusteEstoqueMutationRequest>> & { client?: typeof fetch },
  }
   = {}) {
  
          const { mutation = {}, client: config = {} } = options ?? {}
          const { client: queryClient, ...mutationOptions } = mutation;
          const mutationKey = mutationOptions.mutationKey ?? movimentoEstoqueControllerAjusteEstoqueMutationKey()
  
          return useMutation<MovimentoEstoqueControllerAjusteEstoqueMutationResponse, ResponseErrorConfig<MovimentoEstoqueControllerAjusteEstoque400 | MovimentoEstoqueControllerAjusteEstoque404>, {data: MovimentoEstoqueControllerAjusteEstoqueMutationRequest}, TContext>({
            mutationFn: async({ data }) => {
              return movimentoEstoqueControllerAjusteEstoque(data, config)
            },
            mutationKey,
            ...mutationOptions
          }, queryClient)
      
}
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { ConferenciaItemControllerAjustarEstoqueMutationRequest, ConferenciaItemControllerAjustarEstoqueMutationResponse, ConferenciaItemControllerAjustarEstoquePathParams, ConferenciaItemControllerAjustarEstoque400, ConferenciaItemControllerAjustarEstoque404 } from "../types/ConferenciaItemControllerAjustarEstoque.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import { useMutation } from "@tanstack/react-query";

export const conferenciaItemControllerAjustarEstoqueMutationKey = () =>   [{"url":"/conferencia-item/{id}/ajustar"}] as const

export type ConferenciaItemControllerAjustarEstoqueMutationKey = ReturnType<typeof conferenciaItemControllerAjustarEstoqueMutationKey>

/**
 * @description Ajusta a quantidade no estoque com base na quantidade conferida e cria movimento de estoque para auditoria
 * @summary Ajustar estoque baseado na conferência
 * {@link /conferencia-item/:id/ajustar}
 */
export async function conferenciaItemControllerAjustarEstoque(id: ConferenciaItemControllerAjustarEstoquePathParams["id"], data: ConferenciaItemControllerAjustarEstoqueMutationRequest, config: Partial<RequestConfig<ConferenciaItemControllerAjustarEstoqueMutationRequest>> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config

const requestData = data
const res = await request<ConferenciaItemControllerAjustarEstoqueMutationResponse, ResponseErrorConfig<ConferenciaItemControllerAjustarEstoque400 | ConferenciaItemControllerAjustarEstoque404>, ConferenciaItemControllerAjustarEstoqueMutationRequest>({ method : "PATCH", url : `/conferencia-item/${id}/ajustar`, data : requestData, ... requestConfig })
return res.data
}

/**
 * @description Ajusta a quantidade no estoque com base na quantidade conferida e cria movimento de estoque para auditoria
 * @summary Ajustar estoque baseado na conferência
 * {@link /conferencia-item/:id/ajustar}
 */
export function useConferenciaItemControllerAjustarEstoque<TContext>(options: 
  {
    mutation?: UseMutationOptions<ConferenciaItemControllerAjustarEstoqueMutationResponse, ResponseErrorConfig<ConferenciaItemControllerAjustarEstoque400 | ConferenciaItemControllerAjustarEstoque404>, {id: ConferenciaItemControllerAjustarEstoquePathParams["id"], data: ConferenciaItemControllerAjustarEstoqueMutationRequest}, TContext> & { client?: QueryClient },
    client?: Partial<RequestConfig<ConferenciaItemControllerAjustarEstoqueMutationRequest>> & { client?: typeof fetch },
  }
   = {}) {
  
          const { mutation = {}, client: config = {} } = options ?? {}
          const { client: queryClient, ...mutationOptions } = mutation;
          const mutationKey = mutationOptions.mutationKey ?? conferenciaItemControllerAjustarEstoqueMutationKey()
  
          return useMutation<ConferenciaItemControllerAjustarEstoqueMutationResponse, ResponseErrorConfig<ConferenciaItemControllerAjustarEstoque400 | ConferenciaItemControllerAjustarEstoque404>, {id: ConferenciaItemControllerAjustarEstoquePathParams["id"], data: ConferenciaItemControllerAjustarEstoqueMutationRequest}, TContext>({
            mutationFn: async({ id, data }) => {
              return conferenciaItemControllerAjustarEstoque(id, data, config)
            },
            mutationKey,
            ...mutationOptions
          }, queryClient)
      
}
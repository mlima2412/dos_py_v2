/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { TransferenciaEstoqueSkuControllerRemoveMutationResponse, TransferenciaEstoqueSkuControllerRemovePathParams, TransferenciaEstoqueSkuControllerRemove404 } from "../types/TransferenciaEstoqueSkuControllerRemove.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import { useMutation } from "@tanstack/react-query";

export const transferenciaEstoqueSkuControllerRemoveMutationKey = () =>   [{"url":"/transferencia-estoque-sku/{id}"}] as const

export type TransferenciaEstoqueSkuControllerRemoveMutationKey = ReturnType<typeof transferenciaEstoqueSkuControllerRemoveMutationKey>

/**
 * @description Exclui um item de transferência de estoque
 * @summary Excluir item de transferência
 * {@link /transferencia-estoque-sku/:id}
 */
export async function transferenciaEstoqueSkuControllerRemove(id: TransferenciaEstoqueSkuControllerRemovePathParams["id"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<TransferenciaEstoqueSkuControllerRemoveMutationResponse, ResponseErrorConfig<TransferenciaEstoqueSkuControllerRemove404>, unknown>({ method : "DELETE", url : `/transferencia-estoque-sku/${id}`, ... requestConfig })
return res.data
}

/**
 * @description Exclui um item de transferência de estoque
 * @summary Excluir item de transferência
 * {@link /transferencia-estoque-sku/:id}
 */
export function useTransferenciaEstoqueSkuControllerRemove<TContext>(options: 
  {
    mutation?: UseMutationOptions<TransferenciaEstoqueSkuControllerRemoveMutationResponse, ResponseErrorConfig<TransferenciaEstoqueSkuControllerRemove404>, {id: TransferenciaEstoqueSkuControllerRemovePathParams["id"]}, TContext> & { client?: QueryClient },
    client?: Partial<RequestConfig> & { client?: typeof fetch },
  }
   = {}) {
  
          const { mutation = {}, client: config = {} } = options ?? {}
          const { client: queryClient, ...mutationOptions } = mutation;
          const mutationKey = mutationOptions.mutationKey ?? transferenciaEstoqueSkuControllerRemoveMutationKey()
  
          return useMutation<TransferenciaEstoqueSkuControllerRemoveMutationResponse, ResponseErrorConfig<TransferenciaEstoqueSkuControllerRemove404>, {id: TransferenciaEstoqueSkuControllerRemovePathParams["id"]}, TContext>({
            mutationFn: async({ id }) => {
              return transferenciaEstoqueSkuControllerRemove(id, config)
            },
            mutationKey,
            ...mutationOptions
          }, queryClient)
      
}
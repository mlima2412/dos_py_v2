/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { TransferenciaEstoqueSkuControllerFindOneQueryResponse, TransferenciaEstoqueSkuControllerFindOnePathParams, TransferenciaEstoqueSkuControllerFindOne404 } from "../types/TransferenciaEstoqueSkuControllerFindOne.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from "@tanstack/react-query";
import { queryOptions, useQuery } from "@tanstack/react-query";

export const transferenciaEstoqueSkuControllerFindOneQueryKey = (id: TransferenciaEstoqueSkuControllerFindOnePathParams["id"]) =>   [{ url: '/transferencia-estoque-sku/:id', params: {id:id} }] as const

export type TransferenciaEstoqueSkuControllerFindOneQueryKey = ReturnType<typeof transferenciaEstoqueSkuControllerFindOneQueryKey>

/**
 * @description Retorna um item de transferência específico pelo seu ID
 * @summary Buscar item de transferência por ID
 * {@link /transferencia-estoque-sku/:id}
 */
export async function transferenciaEstoqueSkuControllerFindOne(id: TransferenciaEstoqueSkuControllerFindOnePathParams["id"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<TransferenciaEstoqueSkuControllerFindOneQueryResponse, ResponseErrorConfig<TransferenciaEstoqueSkuControllerFindOne404>, unknown>({ method : "GET", url : `/transferencia-estoque-sku/${id}`, ... requestConfig })
return res.data
}

export function transferenciaEstoqueSkuControllerFindOneQueryOptions(id: TransferenciaEstoqueSkuControllerFindOnePathParams["id"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  
        const queryKey = transferenciaEstoqueSkuControllerFindOneQueryKey(id)
        return queryOptions<TransferenciaEstoqueSkuControllerFindOneQueryResponse, ResponseErrorConfig<TransferenciaEstoqueSkuControllerFindOne404>, TransferenciaEstoqueSkuControllerFindOneQueryResponse, typeof queryKey>({
         enabled: !!(id),
         queryKey,
         queryFn: async ({ signal }) => {
            config.signal = signal
            return transferenciaEstoqueSkuControllerFindOne(id, config)
         },
        })
  
}

/**
 * @description Retorna um item de transferência específico pelo seu ID
 * @summary Buscar item de transferência por ID
 * {@link /transferencia-estoque-sku/:id}
 */
export function useTransferenciaEstoqueSkuControllerFindOne<TData = TransferenciaEstoqueSkuControllerFindOneQueryResponse, TQueryData = TransferenciaEstoqueSkuControllerFindOneQueryResponse, TQueryKey extends QueryKey = TransferenciaEstoqueSkuControllerFindOneQueryKey>(id: TransferenciaEstoqueSkuControllerFindOnePathParams["id"], options: 
  {
    query?: Partial<QueryObserverOptions<TransferenciaEstoqueSkuControllerFindOneQueryResponse, ResponseErrorConfig<TransferenciaEstoqueSkuControllerFindOne404>, TData, TQueryData, TQueryKey>> & { client?: QueryClient },
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  }
   = {}) {
  
         const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
         const queryKey = queryOptions?.queryKey ?? transferenciaEstoqueSkuControllerFindOneQueryKey(id)
  
         const query = useQuery({
          ...transferenciaEstoqueSkuControllerFindOneQueryOptions(id, config),
          queryKey,
          ...queryOptions
         } as unknown as QueryObserverOptions, queryClient) as UseQueryResult<TData, ResponseErrorConfig<TransferenciaEstoqueSkuControllerFindOne404>> & { queryKey: TQueryKey }
  
         query.queryKey = queryKey as TQueryKey
  
         return query
         
}
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { SubCategoriaDespesaControllerFindByCategoriaQueryResponse, SubCategoriaDespesaControllerFindByCategoriaPathParams, SubCategoriaDespesaControllerFindByCategoria401 } from "../types/SubCategoriaDespesaControllerFindByCategoria.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from "@tanstack/react-query";
import { queryOptions, useSuspenseQuery } from "@tanstack/react-query";

export const subCategoriaDespesaControllerFindByCategoriaSuspenseQueryKey = (categoriaId: SubCategoriaDespesaControllerFindByCategoriaPathParams["categoriaId"]) => [{ url: '/subcategoria-despesa/categoria/:categoriaId', params: {categoriaId:categoriaId} }] as const

export type SubCategoriaDespesaControllerFindByCategoriaSuspenseQueryKey = ReturnType<typeof subCategoriaDespesaControllerFindByCategoriaSuspenseQueryKey>

/**
 * @summary Listar subcategorias de despesas por categoria
 * {@link /subcategoria-despesa/categoria/:categoriaId}
 */
export async function subCategoriaDespesaControllerFindByCategoriaSuspense(categoriaId: SubCategoriaDespesaControllerFindByCategoriaPathParams["categoriaId"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<SubCategoriaDespesaControllerFindByCategoriaQueryResponse, ResponseErrorConfig<SubCategoriaDespesaControllerFindByCategoria401>, unknown>({ method : "GET", url : `/subcategoria-despesa/categoria/${categoriaId}`, ... requestConfig })  
  return res.data
}

export function subCategoriaDespesaControllerFindByCategoriaSuspenseQueryOptions(categoriaId: SubCategoriaDespesaControllerFindByCategoriaPathParams["categoriaId"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const queryKey = subCategoriaDespesaControllerFindByCategoriaSuspenseQueryKey(categoriaId)
  return queryOptions<SubCategoriaDespesaControllerFindByCategoriaQueryResponse, ResponseErrorConfig<SubCategoriaDespesaControllerFindByCategoria401>, SubCategoriaDespesaControllerFindByCategoriaQueryResponse, typeof queryKey>({
   enabled: !!(categoriaId),
   queryKey,
   queryFn: async ({ signal }) => {
      config.signal = signal
      return subCategoriaDespesaControllerFindByCategoriaSuspense(categoriaId, config)
   },
  })
}

/**
 * @summary Listar subcategorias de despesas por categoria
 * {@link /subcategoria-despesa/categoria/:categoriaId}
 */
export function useSubCategoriaDespesaControllerFindByCategoriaSuspense<TData = SubCategoriaDespesaControllerFindByCategoriaQueryResponse, TQueryKey extends QueryKey = SubCategoriaDespesaControllerFindByCategoriaSuspenseQueryKey>(categoriaId: SubCategoriaDespesaControllerFindByCategoriaPathParams["categoriaId"], options: 
{
  query?: Partial<UseSuspenseQueryOptions<SubCategoriaDespesaControllerFindByCategoriaQueryResponse, ResponseErrorConfig<SubCategoriaDespesaControllerFindByCategoria401>, TData, TQueryKey>> & { client?: QueryClient },
  client?: Partial<RequestConfig> & { client?: typeof fetch }
}
 = {}) {
  const { query: queryConfig = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...queryOptions } = queryConfig
  const queryKey = queryOptions?.queryKey ?? subCategoriaDespesaControllerFindByCategoriaSuspenseQueryKey(categoriaId)

  const query = useSuspenseQuery({
   ...subCategoriaDespesaControllerFindByCategoriaSuspenseQueryOptions(categoriaId, config),
   queryKey,
   ...queryOptions
  } as unknown as UseSuspenseQueryOptions, queryClient) as UseSuspenseQueryResult<TData, ResponseErrorConfig<SubCategoriaDespesaControllerFindByCategoria401>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/fetch-client'
import type {
  CurrencyControllerDeactivateMutationResponse,
  CurrencyControllerDeactivatePathParams,
  CurrencyControllerDeactivate401,
  CurrencyControllerDeactivate404,
} from '../types/CurrencyControllerDeactivate.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/fetch-client'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const currencyControllerDeactivateMutationKey = () => [{ url: '/currency/{publicId}/deactivate' }] as const

export type CurrencyControllerDeactivateMutationKey = ReturnType<typeof currencyControllerDeactivateMutationKey>

/**
 * @summary Desativar moeda
 * {@link /currency/:publicId/deactivate}
 */
export async function currencyControllerDeactivate(
  publicId: CurrencyControllerDeactivatePathParams['publicId'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    CurrencyControllerDeactivateMutationResponse,
    ResponseErrorConfig<CurrencyControllerDeactivate401 | CurrencyControllerDeactivate404>,
    unknown
  >({ method: 'PATCH', url: `/currency/${publicId}/deactivate`, ...requestConfig })
  return res.data
}

/**
 * @summary Desativar moeda
 * {@link /currency/:publicId/deactivate}
 */
export function useCurrencyControllerDeactivate<TContext>(
  options: {
    mutation?: UseMutationOptions<
      CurrencyControllerDeactivateMutationResponse,
      ResponseErrorConfig<CurrencyControllerDeactivate401 | CurrencyControllerDeactivate404>,
      { publicId: CurrencyControllerDeactivatePathParams['publicId'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? currencyControllerDeactivateMutationKey()

  return useMutation<
    CurrencyControllerDeactivateMutationResponse,
    ResponseErrorConfig<CurrencyControllerDeactivate401 | CurrencyControllerDeactivate404>,
    { publicId: CurrencyControllerDeactivatePathParams['publicId'] },
    TContext
  >(
    {
      mutationFn: async ({ publicId }) => {
        return currencyControllerDeactivate(publicId, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
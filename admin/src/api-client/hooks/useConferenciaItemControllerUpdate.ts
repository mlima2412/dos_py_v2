/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { ConferenciaItemControllerUpdateMutationRequest, ConferenciaItemControllerUpdateMutationResponse, ConferenciaItemControllerUpdatePathParams, ConferenciaItemControllerUpdate400, ConferenciaItemControllerUpdate404 } from "../types/ConferenciaItemControllerUpdate.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, UseMutationResult, QueryClient } from "@tanstack/react-query";
import { mutationOptions, useMutation } from "@tanstack/react-query";

export const conferenciaItemControllerUpdateMutationKey = () => [{ url: '/conferencia-item/:id' }] as const

export type ConferenciaItemControllerUpdateMutationKey = ReturnType<typeof conferenciaItemControllerUpdateMutationKey>

/**
 * @summary Atualizar item de conferência
 * {@link /conferencia-item/:id}
 */
export async function conferenciaItemControllerUpdate(id: ConferenciaItemControllerUpdatePathParams["id"], data?: ConferenciaItemControllerUpdateMutationRequest, config: Partial<RequestConfig<ConferenciaItemControllerUpdateMutationRequest>> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const requestData = data  
  
  const res = await request<ConferenciaItemControllerUpdateMutationResponse, ResponseErrorConfig<ConferenciaItemControllerUpdate400 | ConferenciaItemControllerUpdate404>, ConferenciaItemControllerUpdateMutationRequest>({ method : "PATCH", url : `/conferencia-item/${id}`, data : requestData, ... requestConfig })  
  return res.data
}

export function conferenciaItemControllerUpdateMutationOptions(config: Partial<RequestConfig<ConferenciaItemControllerUpdateMutationRequest>> & { client?: typeof fetch } = {}) {
  const mutationKey = conferenciaItemControllerUpdateMutationKey()
  return mutationOptions<ConferenciaItemControllerUpdateMutationResponse, ResponseErrorConfig<ConferenciaItemControllerUpdate400 | ConferenciaItemControllerUpdate404>, {id: ConferenciaItemControllerUpdatePathParams["id"], data?: ConferenciaItemControllerUpdateMutationRequest}, typeof mutationKey>({
    mutationKey,
    mutationFn: async({ id, data }) => {
      return conferenciaItemControllerUpdate(id, data, config)
    },
  })
}

/**
 * @summary Atualizar item de conferência
 * {@link /conferencia-item/:id}
 */
export function useConferenciaItemControllerUpdate<TContext>(options: 
{
  mutation?: UseMutationOptions<ConferenciaItemControllerUpdateMutationResponse, ResponseErrorConfig<ConferenciaItemControllerUpdate400 | ConferenciaItemControllerUpdate404>, {id: ConferenciaItemControllerUpdatePathParams["id"], data?: ConferenciaItemControllerUpdateMutationRequest}, TContext> & { client?: QueryClient },
  client?: Partial<RequestConfig<ConferenciaItemControllerUpdateMutationRequest>> & { client?: typeof fetch },
}
 = {}) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation;
  const mutationKey = mutationOptions.mutationKey ?? conferenciaItemControllerUpdateMutationKey()

  const baseOptions = conferenciaItemControllerUpdateMutationOptions(config) as UseMutationOptions<ConferenciaItemControllerUpdateMutationResponse, ResponseErrorConfig<ConferenciaItemControllerUpdate400 | ConferenciaItemControllerUpdate404>, {id: ConferenciaItemControllerUpdatePathParams["id"], data?: ConferenciaItemControllerUpdateMutationRequest}, TContext>

  return useMutation<ConferenciaItemControllerUpdateMutationResponse, ResponseErrorConfig<ConferenciaItemControllerUpdate400 | ConferenciaItemControllerUpdate404>, {id: ConferenciaItemControllerUpdatePathParams["id"], data?: ConferenciaItemControllerUpdateMutationRequest}, TContext>({
    ...baseOptions,
    mutationKey,
    ...mutationOptions,
  }, queryClient) as UseMutationResult<ConferenciaItemControllerUpdateMutationResponse, ResponseErrorConfig<ConferenciaItemControllerUpdate400 | ConferenciaItemControllerUpdate404>, {id: ConferenciaItemControllerUpdatePathParams["id"], data?: ConferenciaItemControllerUpdateMutationRequest}, TContext>
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/fetch-client'
import type {
  DespesasControllerRemoveMutationResponse,
  DespesasControllerRemovePathParams,
  DespesasControllerRemove404,
} from '../types/DespesasControllerRemove.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/fetch-client'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const despesasControllerRemoveMutationKey = () => [{ url: '/despesas/{publicId}' }] as const

export type DespesasControllerRemoveMutationKey = ReturnType<typeof despesasControllerRemoveMutationKey>

/**
 * @summary Remover despesa
 * {@link /despesas/:publicId}
 */
export async function despesasControllerRemove(
  publicId: DespesasControllerRemovePathParams['publicId'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<DespesasControllerRemoveMutationResponse, ResponseErrorConfig<DespesasControllerRemove404>, unknown>({
    method: 'DELETE',
    url: `/despesas/${publicId}`,
    ...requestConfig,
  })
  return res.data
}

/**
 * @summary Remover despesa
 * {@link /despesas/:publicId}
 */
export function useDespesasControllerRemove<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DespesasControllerRemoveMutationResponse,
      ResponseErrorConfig<DespesasControllerRemove404>,
      { publicId: DespesasControllerRemovePathParams['publicId'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? despesasControllerRemoveMutationKey()

  return useMutation<
    DespesasControllerRemoveMutationResponse,
    ResponseErrorConfig<DespesasControllerRemove404>,
    { publicId: DespesasControllerRemovePathParams['publicId'] },
    TContext
  >(
    {
      mutationFn: async ({ publicId }) => {
        return despesasControllerRemove(publicId, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
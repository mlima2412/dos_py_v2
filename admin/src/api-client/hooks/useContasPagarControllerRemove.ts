/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/fetch-client'
import type {
  ContasPagarControllerRemoveMutationResponse,
  ContasPagarControllerRemovePathParams,
  ContasPagarControllerRemove404,
} from '../types/ContasPagarControllerRemove.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/fetch-client'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const contasPagarControllerRemoveMutationKey = () => [{ url: '/contas-pagar/{publicId}' }] as const

export type ContasPagarControllerRemoveMutationKey = ReturnType<typeof contasPagarControllerRemoveMutationKey>

/**
 * @summary Remover conta a pagar
 * {@link /contas-pagar/:publicId}
 */
export async function contasPagarControllerRemove(
  publicId: ContasPagarControllerRemovePathParams['publicId'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<ContasPagarControllerRemoveMutationResponse, ResponseErrorConfig<ContasPagarControllerRemove404>, unknown>({
    method: 'DELETE',
    url: `/contas-pagar/${publicId}`,
    ...requestConfig,
  })
  return res.data
}

/**
 * @summary Remover conta a pagar
 * {@link /contas-pagar/:publicId}
 */
export function useContasPagarControllerRemove<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ContasPagarControllerRemoveMutationResponse,
      ResponseErrorConfig<ContasPagarControllerRemove404>,
      { publicId: ContasPagarControllerRemovePathParams['publicId'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? contasPagarControllerRemoveMutationKey()

  return useMutation<
    ContasPagarControllerRemoveMutationResponse,
    ResponseErrorConfig<ContasPagarControllerRemove404>,
    { publicId: ContasPagarControllerRemovePathParams['publicId'] },
    TContext
  >(
    {
      mutationFn: async ({ publicId }) => {
        return contasPagarControllerRemove(publicId, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}

/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { PedidoCompraItemControllerCreateMutationRequest, PedidoCompraItemControllerCreateMutationResponse, PedidoCompraItemControllerCreateHeaderParams, PedidoCompraItemControllerCreate400, PedidoCompraItemControllerCreate404, PedidoCompraItemControllerCreate409 } from "../types/PedidoCompraItemControllerCreate.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import { useMutation } from "@tanstack/react-query";

export const pedidoCompraItemControllerCreateMutationKey = () =>   [{"url":"/pedido-compra-item"}] as const

export type PedidoCompraItemControllerCreateMutationKey = ReturnType<typeof pedidoCompraItemControllerCreateMutationKey>

/**
 * @summary Criar novo item de pedido de compra
 * {@link /pedido-compra-item}
 */
export async function pedidoCompraItemControllerCreate(data: PedidoCompraItemControllerCreateMutationRequest, headers: PedidoCompraItemControllerCreateHeaderParams, config: Partial<RequestConfig<PedidoCompraItemControllerCreateMutationRequest>> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config

const requestData = data
const res = await request<PedidoCompraItemControllerCreateMutationResponse, ResponseErrorConfig<PedidoCompraItemControllerCreate400 | PedidoCompraItemControllerCreate404 | PedidoCompraItemControllerCreate409>, PedidoCompraItemControllerCreateMutationRequest>({ method : "POST", url : `/pedido-compra-item`, data : requestData, ... requestConfig, headers : { ...headers, ...requestConfig.headers } })
return res.data
}

/**
 * @summary Criar novo item de pedido de compra
 * {@link /pedido-compra-item}
 */
export function usePedidoCompraItemControllerCreate<TContext>(options: 
  {
    mutation?: UseMutationOptions<PedidoCompraItemControllerCreateMutationResponse, ResponseErrorConfig<PedidoCompraItemControllerCreate400 | PedidoCompraItemControllerCreate404 | PedidoCompraItemControllerCreate409>, {data: PedidoCompraItemControllerCreateMutationRequest, headers: PedidoCompraItemControllerCreateHeaderParams}, TContext> & { client?: QueryClient },
    client?: Partial<RequestConfig<PedidoCompraItemControllerCreateMutationRequest>> & { client?: typeof fetch },
  }
   = {}) {
  
          const { mutation = {}, client: config = {} } = options ?? {}
          const { client: queryClient, ...mutationOptions } = mutation;
          const mutationKey = mutationOptions.mutationKey ?? pedidoCompraItemControllerCreateMutationKey()
  
          return useMutation<PedidoCompraItemControllerCreateMutationResponse, ResponseErrorConfig<PedidoCompraItemControllerCreate400 | PedidoCompraItemControllerCreate404 | PedidoCompraItemControllerCreate409>, {data: PedidoCompraItemControllerCreateMutationRequest, headers: PedidoCompraItemControllerCreateHeaderParams}, TContext>({
            mutationFn: async({ data, headers }) => {
              return pedidoCompraItemControllerCreate(data, headers, config)
            },
            mutationKey,
            ...mutationOptions
          }, queryClient)
      
}
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { VendaItemControllerFindAllQueryResponse, VendaItemControllerFindAllQueryParams, VendaItemControllerFindAllHeaderParams } from "../types/VendaItemControllerFindAll.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from "@tanstack/react-query";
import { queryOptions, useQuery } from "@tanstack/react-query";

export const vendaItemControllerFindAllQueryKey = (params: VendaItemControllerFindAllQueryParams) => [{ url: '/venda-item' }, ...(params ? [params] : [])] as const

export type VendaItemControllerFindAllQueryKey = ReturnType<typeof vendaItemControllerFindAllQueryKey>

/**
 * @summary Listar itens de uma venda específica
 * {@link /venda-item}
 */
export async function vendaItemControllerFindAll(params: VendaItemControllerFindAllQueryParams, headers: VendaItemControllerFindAllHeaderParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<VendaItemControllerFindAllQueryResponse, ResponseErrorConfig<Error>, unknown>({ method : "GET", url : `/venda-item`, params, ... requestConfig, headers : { ...headers, ...requestConfig.headers } })  
  return res.data
}

export function vendaItemControllerFindAllQueryOptions(params: VendaItemControllerFindAllQueryParams, headers: VendaItemControllerFindAllHeaderParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const queryKey = vendaItemControllerFindAllQueryKey(params)
  return queryOptions<VendaItemControllerFindAllQueryResponse, ResponseErrorConfig<Error>, VendaItemControllerFindAllQueryResponse, typeof queryKey>({
   enabled: !!(params),
   queryKey,
   queryFn: async ({ signal }) => {
      config.signal = signal
      return vendaItemControllerFindAll(params, headers, config)
   },
  })
}

/**
 * @summary Listar itens de uma venda específica
 * {@link /venda-item}
 */
export function useVendaItemControllerFindAll<TData = VendaItemControllerFindAllQueryResponse, TQueryData = VendaItemControllerFindAllQueryResponse, TQueryKey extends QueryKey = VendaItemControllerFindAllQueryKey>(params: VendaItemControllerFindAllQueryParams, headers: VendaItemControllerFindAllHeaderParams, options: 
{
  query?: Partial<QueryObserverOptions<VendaItemControllerFindAllQueryResponse, ResponseErrorConfig<Error>, TData, TQueryData, TQueryKey>> & { client?: QueryClient },
  client?: Partial<RequestConfig> & { client?: typeof fetch }
}
 = {}) {
  const { query: queryConfig = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...queryOptions } = queryConfig
  const queryKey = queryOptions?.queryKey ?? vendaItemControllerFindAllQueryKey(params)

  const query = useQuery({
   ...vendaItemControllerFindAllQueryOptions(params, headers, config),
   queryKey,
   ...queryOptions
  } as unknown as QueryObserverOptions, queryClient) as UseQueryResult<TData, ResponseErrorConfig<Error>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}
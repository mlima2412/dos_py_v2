/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/fetch-client'
import type {
  SubCategoriaDespesaControllerFindOneQueryResponse,
  SubCategoriaDespesaControllerFindOnePathParams,
  SubCategoriaDespesaControllerFindOne401,
  SubCategoriaDespesaControllerFindOne404,
} from '../types/SubCategoriaDespesaControllerFindOne.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/fetch-client'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const subCategoriaDespesaControllerFindOneQueryKey = (id: SubCategoriaDespesaControllerFindOnePathParams['id']) =>
  [{ url: '/subcategoria-despesa/:id', params: { id: id } }] as const

export type SubCategoriaDespesaControllerFindOneQueryKey = ReturnType<typeof subCategoriaDespesaControllerFindOneQueryKey>

/**
 * @summary Buscar subcategoria de despesas por ID
 * {@link /subcategoria-despesa/:id}
 */
export async function subCategoriaDespesaControllerFindOne(
  id: SubCategoriaDespesaControllerFindOnePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    SubCategoriaDespesaControllerFindOneQueryResponse,
    ResponseErrorConfig<SubCategoriaDespesaControllerFindOne401 | SubCategoriaDespesaControllerFindOne404>,
    unknown
  >({ method: 'GET', url: `/subcategoria-despesa/${id}`, ...requestConfig })
  return res.data
}

export function subCategoriaDespesaControllerFindOneQueryOptions(
  id: SubCategoriaDespesaControllerFindOnePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const queryKey = subCategoriaDespesaControllerFindOneQueryKey(id)
  return queryOptions<
    SubCategoriaDespesaControllerFindOneQueryResponse,
    ResponseErrorConfig<SubCategoriaDespesaControllerFindOne401 | SubCategoriaDespesaControllerFindOne404>,
    SubCategoriaDespesaControllerFindOneQueryResponse,
    typeof queryKey
  >({
    enabled: !!id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return subCategoriaDespesaControllerFindOne(id, config)
    },
  })
}

/**
 * @summary Buscar subcategoria de despesas por ID
 * {@link /subcategoria-despesa/:id}
 */
export function useSubCategoriaDespesaControllerFindOne<
  TData = SubCategoriaDespesaControllerFindOneQueryResponse,
  TQueryData = SubCategoriaDespesaControllerFindOneQueryResponse,
  TQueryKey extends QueryKey = SubCategoriaDespesaControllerFindOneQueryKey,
>(
  id: SubCategoriaDespesaControllerFindOnePathParams['id'],
  options: {
    query?: Partial<
      QueryObserverOptions<
        SubCategoriaDespesaControllerFindOneQueryResponse,
        ResponseErrorConfig<SubCategoriaDespesaControllerFindOne401 | SubCategoriaDespesaControllerFindOne404>,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? subCategoriaDespesaControllerFindOneQueryKey(id)

  const query = useQuery(
    {
      ...subCategoriaDespesaControllerFindOneQueryOptions(id, config),
      queryKey,
      ...queryOptions,
    } as unknown as QueryObserverOptions,
    queryClient,
  ) as UseQueryResult<TData, ResponseErrorConfig<SubCategoriaDespesaControllerFindOne401 | SubCategoriaDespesaControllerFindOne404>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}
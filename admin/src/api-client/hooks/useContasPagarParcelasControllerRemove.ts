/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/fetch-client'
import type {
  ContasPagarParcelasControllerRemoveMutationResponse,
  ContasPagarParcelasControllerRemovePathParams,
  ContasPagarParcelasControllerRemove404,
} from '../types/ContasPagarParcelasControllerRemove.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/fetch-client'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const contasPagarParcelasControllerRemoveMutationKey = () => [{ url: '/contas-pagar-parcelas/{publicId}' }] as const

export type ContasPagarParcelasControllerRemoveMutationKey = ReturnType<typeof contasPagarParcelasControllerRemoveMutationKey>

/**
 * @summary Remover parcela
 * {@link /contas-pagar-parcelas/:publicId}
 */
export async function contasPagarParcelasControllerRemove(
  publicId: ContasPagarParcelasControllerRemovePathParams['publicId'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<ContasPagarParcelasControllerRemoveMutationResponse, ResponseErrorConfig<ContasPagarParcelasControllerRemove404>, unknown>({
    method: 'DELETE',
    url: `/contas-pagar-parcelas/${publicId}`,
    ...requestConfig,
  })
  return res.data
}

/**
 * @summary Remover parcela
 * {@link /contas-pagar-parcelas/:publicId}
 */
export function useContasPagarParcelasControllerRemove<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ContasPagarParcelasControllerRemoveMutationResponse,
      ResponseErrorConfig<ContasPagarParcelasControllerRemove404>,
      { publicId: ContasPagarParcelasControllerRemovePathParams['publicId'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? contasPagarParcelasControllerRemoveMutationKey()

  return useMutation<
    ContasPagarParcelasControllerRemoveMutationResponse,
    ResponseErrorConfig<ContasPagarParcelasControllerRemove404>,
    { publicId: ContasPagarParcelasControllerRemovePathParams['publicId'] },
    TContext
  >(
    {
      mutationFn: async ({ publicId }) => {
        return contasPagarParcelasControllerRemove(publicId, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/fetch-client";
import type { VendaControllerFinalizeDiretaMutationRequest, VendaControllerFinalizeDiretaMutationResponse, VendaControllerFinalizeDiretaPathParams, VendaControllerFinalizeDiretaHeaderParams } from "../types/VendaControllerFinalizeDireta.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/fetch-client";
import type { UseMutationOptions, UseMutationResult, QueryClient } from "@tanstack/react-query";
import { mutationOptions, useMutation } from "@tanstack/react-query";

export const vendaControllerFinalizeDiretaMutationKey = () => [{ url: '/venda/:publicId/finalizar' }] as const

export type VendaControllerFinalizeDiretaMutationKey = ReturnType<typeof vendaControllerFinalizeDiretaMutationKey>

/**
 * @summary Finalizar venda direta com pagamentos e baixa de estoque
 * {@link /venda/:publicId/finalizar}
 */
export async function vendaControllerFinalizeDireta(publicId: VendaControllerFinalizeDiretaPathParams["publicId"], headers: VendaControllerFinalizeDiretaHeaderParams, data?: VendaControllerFinalizeDiretaMutationRequest, config: Partial<RequestConfig<VendaControllerFinalizeDiretaMutationRequest>> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const requestData = data  
  
  const res = await request<VendaControllerFinalizeDiretaMutationResponse, ResponseErrorConfig<Error>, VendaControllerFinalizeDiretaMutationRequest>({ method : "PATCH", url : `/venda/${publicId}/finalizar`, data : requestData, ... requestConfig, headers : { ...headers, ...requestConfig.headers } })  
  return res.data
}

export function vendaControllerFinalizeDiretaMutationOptions(config: Partial<RequestConfig<VendaControllerFinalizeDiretaMutationRequest>> & { client?: typeof fetch } = {}) {
  const mutationKey = vendaControllerFinalizeDiretaMutationKey()
  return mutationOptions<VendaControllerFinalizeDiretaMutationResponse, ResponseErrorConfig<Error>, {publicId: VendaControllerFinalizeDiretaPathParams["publicId"], headers: VendaControllerFinalizeDiretaHeaderParams, data?: VendaControllerFinalizeDiretaMutationRequest}, typeof mutationKey>({
    mutationKey,
    mutationFn: async({ publicId, headers, data }) => {
      return vendaControllerFinalizeDireta(publicId, headers, data, config)
    },
  })
}

/**
 * @summary Finalizar venda direta com pagamentos e baixa de estoque
 * {@link /venda/:publicId/finalizar}
 */
export function useVendaControllerFinalizeDireta<TContext>(options: 
{
  mutation?: UseMutationOptions<VendaControllerFinalizeDiretaMutationResponse, ResponseErrorConfig<Error>, {publicId: VendaControllerFinalizeDiretaPathParams["publicId"], headers: VendaControllerFinalizeDiretaHeaderParams, data?: VendaControllerFinalizeDiretaMutationRequest}, TContext> & { client?: QueryClient },
  client?: Partial<RequestConfig<VendaControllerFinalizeDiretaMutationRequest>> & { client?: typeof fetch },
}
 = {}) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation;
  const mutationKey = mutationOptions.mutationKey ?? vendaControllerFinalizeDiretaMutationKey()

  const baseOptions = vendaControllerFinalizeDiretaMutationOptions(config) as UseMutationOptions<VendaControllerFinalizeDiretaMutationResponse, ResponseErrorConfig<Error>, {publicId: VendaControllerFinalizeDiretaPathParams["publicId"], headers: VendaControllerFinalizeDiretaHeaderParams, data?: VendaControllerFinalizeDiretaMutationRequest}, TContext>

  return useMutation<VendaControllerFinalizeDiretaMutationResponse, ResponseErrorConfig<Error>, {publicId: VendaControllerFinalizeDiretaPathParams["publicId"], headers: VendaControllerFinalizeDiretaHeaderParams, data?: VendaControllerFinalizeDiretaMutationRequest}, TContext>({
    ...baseOptions,
    mutationKey,
    ...mutationOptions,
  }, queryClient) as UseMutationResult<VendaControllerFinalizeDiretaMutationResponse, ResponseErrorConfig<Error>, {publicId: VendaControllerFinalizeDiretaPathParams["publicId"], headers: VendaControllerFinalizeDiretaHeaderParams, data?: VendaControllerFinalizeDiretaMutationRequest}, TContext>
}
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { PedidoCompra } from "./PedidoCompra.ts";

export const pedidoCompraControllerFindPaginatedQueryParamsStatusEnum = {
    "EDICAO": "EDICAO",
    "CONCLUSAO": "CONCLUSAO",
    "FINALIZADO": "FINALIZADO"
} as const;

export type PedidoCompraControllerFindPaginatedQueryParamsStatusEnum = (typeof pedidoCompraControllerFindPaginatedQueryParamsStatusEnum)[keyof typeof pedidoCompraControllerFindPaginatedQueryParamsStatusEnum];

export type PedidoCompraControllerFindPaginatedQueryParams = {
    /**
     * @description Número da página
     * @default "1"
     * @type string | undefined
    */
    page?: string;
    /**
     * @description Número de itens por página
     * @default "20"
     * @type string | undefined
    */
    limit?: string;
    /**
     * @description Termo de busca para filtrar por observação
     * @type string | undefined
    */
    search?: string;
    /**
     * @description ID do fornecedor para filtrar
     * @type string | undefined
    */
    fornecedorId?: string;
    /**
     * @description Status do pedido para filtrar
     * @type string | undefined
    */
    status?: PedidoCompraControllerFindPaginatedQueryParamsStatusEnum;
    /**
     * @description ID do local de entrada para filtrar
     * @type string | undefined
    */
    localEntradaId?: string;
    /**
     * @description Filtrar apenas pedidos consignados
     * @type string | undefined
    */
    consignado?: string;
};

export type PedidoCompraControllerFindPaginatedHeaderParams = {
    /**
     * @description ID do parceiro
     * @type integer
    */
    "x-parceiro-id": number;
};

/**
 * @description Lista paginada de pedidos de compra retornada com sucesso
*/
export type PedidoCompraControllerFindPaginated200 = {
    /**
     * @type array | undefined
    */
    data?: PedidoCompra[];
    /**
     * @description Total de registros
     * @type number | undefined
    */
    total?: number;
    /**
     * @description Página atual
     * @type number | undefined
    */
    page?: number;
    /**
     * @description Itens por página
     * @type number | undefined
    */
    limit?: number;
    /**
     * @description Total de páginas
     * @type number | undefined
    */
    totalPages?: number;
};

export type PedidoCompraControllerFindPaginatedQueryResponse = PedidoCompraControllerFindPaginated200;

export type PedidoCompraControllerFindPaginatedQuery = {
    Response: PedidoCompraControllerFindPaginated200;
    QueryParams: PedidoCompraControllerFindPaginatedQueryParams;
    HeaderParams: PedidoCompraControllerFindPaginatedHeaderParams;
    Errors: any;
};
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { ConferenciaEstoqueResponseDto } from "./ConferenciaEstoqueResponseDto.ts";

export const conferenciaEstoqueControllerFindPaginatedQueryParamsStatusEnum = {
    "PENDENTE": "PENDENTE",
    "EM_ANDAMENTO": "EM_ANDAMENTO",
    "CONCLUIDA": "CONCLUIDA",
    "FINALIZADA": "FINALIZADA",
    "CANCELADA": "CANCELADA"
} as const;

export type ConferenciaEstoqueControllerFindPaginatedQueryParamsStatusEnumKey = (typeof conferenciaEstoqueControllerFindPaginatedQueryParamsStatusEnum)[keyof typeof conferenciaEstoqueControllerFindPaginatedQueryParamsStatusEnum];

export type ConferenciaEstoqueControllerFindPaginatedQueryParams = {
    /**
     * @description Número da página
     * @default 1
     * @type number | undefined
    */
    page?: number;
    /**
     * @description Número de itens por página
     * @default 20
     * @type number | undefined
    */
    limit?: number;
    /**
     * @description Termo de busca
     * @type string | undefined
    */
    search?: string;
    /**
     * @description Filtrar por status
     * @type string | undefined
    */
    status?: ConferenciaEstoqueControllerFindPaginatedQueryParamsStatusEnumKey;
    /**
     * @description ID do local de estoque
     * @type number | undefined
    */
    localEstoqueId?: number;
};

export type ConferenciaEstoqueControllerFindPaginatedHeaderParams = {
    /**
     * @description ID do parceiro logado
     * @type integer
    */
    "x-parceiro-id": number;
};

/**
 * @description Lista paginada de conferências de estoque
*/
export type ConferenciaEstoqueControllerFindPaginated200 = {
    /**
     * @type array | undefined
    */
    data?: ConferenciaEstoqueResponseDto[];
    /**
     * @type number | undefined
    */
    total?: number;
    /**
     * @type number | undefined
    */
    page?: number;
    /**
     * @type number | undefined
    */
    limit?: number;
    /**
     * @type number | undefined
    */
    totalPages?: number;
};

export type ConferenciaEstoqueControllerFindPaginatedQueryResponse = ConferenciaEstoqueControllerFindPaginated200;

export type ConferenciaEstoqueControllerFindPaginatedQuery = {
    Response: ConferenciaEstoqueControllerFindPaginated200;
    QueryParams: ConferenciaEstoqueControllerFindPaginatedQueryParams;
    HeaderParams: ConferenciaEstoqueControllerFindPaginatedHeaderParams;
    Errors: any;
};
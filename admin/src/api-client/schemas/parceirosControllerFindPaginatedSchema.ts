/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ParceirosControllerFindPaginatedQueryParams,
  ParceirosControllerFindPaginated200,
  ParceirosControllerFindPaginatedQueryResponse,
} from '../types/ParceirosControllerFindPaginated.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { parceiroSchema } from './parceiroSchema.ts'
import { z } from 'zod'

export const parceirosControllerFindPaginatedQueryParamsSchema = z.object({
  page: z.string(),
  limit: z.string(),
  search: z.string(),
  ativo: z.string(),
}) as unknown as ToZod<ParceirosControllerFindPaginatedQueryParams>

/**
 * @description Lista paginada de parceiros retornada com sucesso
 */
export const parceirosControllerFindPaginated200Schema = z.object({
  data: z.array(z.lazy(() => parceiroSchema)).optional(),
  total: z.coerce.number().describe('Total de registros').optional(),
  page: z.coerce.number().describe('Página atual').optional(),
  limit: z.coerce.number().describe('Itens por página').optional(),
  totalPages: z.coerce.number().describe('Total de páginas').optional(),
}) as unknown as ToZod<ParceirosControllerFindPaginated200>

export const parceirosControllerFindPaginatedQueryResponseSchema = z.lazy(
  () => parceirosControllerFindPaginated200Schema,
) as unknown as ToZod<ParceirosControllerFindPaginatedQueryResponse>

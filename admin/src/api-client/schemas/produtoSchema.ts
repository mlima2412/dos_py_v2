/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { Produto } from "../types/Produto.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { categoriaProdutoSchema } from "./categoriaProdutoSchema.ts";
import { parceiroSchema } from "./parceiroSchema.ts";
import { produtoSKUSchema } from "./produtoSKUSchema.ts";
import { z } from "zod";

export const produtoSchema = z.object({
      "id": z.coerce.number().describe("ID único do produto"),
  "publicId": z.coerce.string().describe("ID público do produto"),
  "nome": z.coerce.string().describe("Nome do produto"),
  "dataCadastro": z.string().datetime().describe("Data de cadastro do produto"),
  "ativo": z.boolean().describe("Status ativo do produto"),
  "consignado": z.boolean().describe("Se o produto é consignado"),
  "categoriaId": z.coerce.number().describe("ID da categoria do produto").optional(),
  "descricao": z.coerce.string().describe("Descrição do produto").optional(),
  "imgURL": z.coerce.string().describe("URL da imagem do produto").optional(),
  "precoCompra": z.coerce.number().describe("Preço de compra do produto"),
  "precoVenda": z.coerce.number().describe("Preço de venda do produto"),
  "parceiroId": z.coerce.number().describe("ID do parceiro proprietário"),
  "categoria": z.lazy(() => categoriaProdutoSchema).describe("Categoria do produto").optional(),
  "Parceiro": z.lazy(() => parceiroSchema).describe("Parceiro proprietário do produto"),
  "ProdutoSKU": z.array(z.lazy(() => produtoSKUSchema)).describe("SKUs do produto").optional()
      }) as unknown as ToZod<Produto>
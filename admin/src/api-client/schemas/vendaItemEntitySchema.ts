/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { VendaItemEntity } from "../types/VendaItemEntity.ts";
import { z } from "zod/v4";

export const vendaItemEntitySchema = z.object({
    "id": z.coerce.number().describe("ID do item da venda"),
"vendaId": z.coerce.number().describe("ID da venda"),
"skuId": z.coerce.number().describe("ID do SKU vendido"),
"tipo": z.enum(["NORMAL", "BRINDE"]).describe("Tipo do item"),
"qtdReservada": z.coerce.number().describe("Quantidade reservada"),
"qtdAceita": z.optional(z.coerce.number().describe("Quantidade aceita (ficou com cliente)")),
"qtdDevolvida": z.optional(z.coerce.number().describe("Quantidade devolvida")),
"desconto": z.optional(z.coerce.number().describe("Desconto do item")),
"precoUnit": z.coerce.number().describe("Preço unitário"),
"skuPublicId": z.optional(z.coerce.string().describe("Public ID do SKU")),
"skuCor": z.optional(z.coerce.string().describe("Cor do SKU")),
"skuCodCor": z.optional(z.coerce.string().describe("Código da cor do SKU (hex)")),
"skuTamanho": z.optional(z.coerce.string().describe("Tamanho do SKU"))
    }) as unknown as z.ZodType<VendaItemEntity>
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  UsuarioParceiroControllerRemoveByUsuarioAndParceiroPathParams,
  UsuarioParceiroControllerRemoveByUsuarioAndParceiro204,
  UsuarioParceiroControllerRemoveByUsuarioAndParceiro404,
  UsuarioParceiroControllerRemoveByUsuarioAndParceiroMutationResponse,
} from '../types/UsuarioParceiroControllerRemoveByUsuarioAndParceiro.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const usuarioParceiroControllerRemoveByUsuarioAndParceiroPathParamsSchema = z.object({
  usuarioId: z.coerce.number().describe('ID do usuário'),
  parceiroId: z.coerce.number().describe('ID do parceiro'),
}) as unknown as ToZod<UsuarioParceiroControllerRemoveByUsuarioAndParceiroPathParams>

/**
 * @description Relação removida com sucesso
 */
export const usuarioParceiroControllerRemoveByUsuarioAndParceiro204Schema =
  z.unknown() as unknown as ToZod<UsuarioParceiroControllerRemoveByUsuarioAndParceiro204>

/**
 * @description Relação não encontrada
 */
export const usuarioParceiroControllerRemoveByUsuarioAndParceiro404Schema =
  z.unknown() as unknown as ToZod<UsuarioParceiroControllerRemoveByUsuarioAndParceiro404>

export const usuarioParceiroControllerRemoveByUsuarioAndParceiroMutationResponseSchema = z.lazy(
  () => usuarioParceiroControllerRemoveByUsuarioAndParceiro204Schema,
) as unknown as ToZod<UsuarioParceiroControllerRemoveByUsuarioAndParceiroMutationResponse>

/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ParceirosControllerDeactivateParceiroPathParams,
  ParceirosControllerDeactivateParceiro200,
  ParceirosControllerDeactivateParceiro404,
  ParceirosControllerDeactivateParceiroMutationResponse,
} from '../types/ParceirosControllerDeactivateParceiro.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { parceiroSchema } from './parceiroSchema.ts'
import { z } from 'zod'

export const parceirosControllerDeactivateParceiroPathParamsSchema = z.object({
  publicId: z.string().describe('ID público do parceiro'),
}) as unknown as ToZod<ParceirosControllerDeactivateParceiroPathParams>

/**
 * @description Parceiro desativado com sucesso
 */
export const parceirosControllerDeactivateParceiro200Schema = z.lazy(() => parceiroSchema) as unknown as ToZod<ParceirosControllerDeactivateParceiro200>

/**
 * @description Parceiro não encontrado
 */
export const parceirosControllerDeactivateParceiro404Schema = z.unknown() as unknown as ToZod<ParceirosControllerDeactivateParceiro404>

export const parceirosControllerDeactivateParceiroMutationResponseSchema = z.lazy(
  () => parceirosControllerDeactivateParceiro200Schema,
) as unknown as ToZod<ParceirosControllerDeactivateParceiroMutationResponse>

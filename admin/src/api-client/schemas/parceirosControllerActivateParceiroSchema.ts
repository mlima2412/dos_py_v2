/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ParceirosControllerActivateParceiroPathParams,
  ParceirosControllerActivateParceiro200,
  ParceirosControllerActivateParceiro404,
  ParceirosControllerActivateParceiroMutationResponse,
} from '../types/ParceirosControllerActivateParceiro.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { parceiroSchema } from './parceiroSchema.ts'
import { z } from 'zod'

export const parceirosControllerActivateParceiroPathParamsSchema = z.object({
  publicId: z.string().describe('ID público do parceiro'),
}) as unknown as ToZod<ParceirosControllerActivateParceiroPathParams>

/**
 * @description Parceiro ativado com sucesso
 */
export const parceirosControllerActivateParceiro200Schema = z.lazy(() => parceiroSchema) as unknown as ToZod<ParceirosControllerActivateParceiro200>

/**
 * @description Parceiro não encontrado
 */
export const parceirosControllerActivateParceiro404Schema = z.unknown() as unknown as ToZod<ParceirosControllerActivateParceiro404>

export const parceirosControllerActivateParceiroMutationResponseSchema = z.lazy(
  () => parceirosControllerActivateParceiro200Schema,
) as unknown as ToZod<ParceirosControllerActivateParceiroMutationResponse>

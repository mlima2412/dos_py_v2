/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { ProdutoSkuControllerFindOnePathParams, ProdutoSkuControllerFindOneHeaderParams, ProdutoSkuControllerFindOne200, ProdutoSkuControllerFindOne404, ProdutoSkuControllerFindOneQueryResponse } from "../types/ProdutoSkuControllerFindOne.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { produtoSKUSchema } from "./produtoSKUSchema.ts";
import { z } from "zod";

export const produtoSkuControllerFindOnePathParamsSchema = z.object({
      "publicId": z.string().describe("ID público do SKU")
      }) as unknown as ToZod<ProdutoSkuControllerFindOnePathParams>

export const produtoSkuControllerFindOneHeaderParamsSchema = z.object({
      "x-parceiro-id": z.coerce.number().int().describe("ID do parceiro logado")
      }) as unknown as ToZod<ProdutoSkuControllerFindOneHeaderParams>

/**
 * @description SKU do produto encontrado
 */
export const produtoSkuControllerFindOne200Schema = z.lazy(() => produtoSKUSchema) as unknown as ToZod<ProdutoSkuControllerFindOne200>

/**
 * @description SKU do produto não encontrado
 */
export const produtoSkuControllerFindOne404Schema = z.unknown() as unknown as ToZod<ProdutoSkuControllerFindOne404>

export const produtoSkuControllerFindOneQueryResponseSchema = z.lazy(() => produtoSkuControllerFindOne200Schema) as unknown as ToZod<ProdutoSkuControllerFindOneQueryResponse>
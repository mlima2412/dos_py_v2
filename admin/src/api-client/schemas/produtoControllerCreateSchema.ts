/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { ProdutoControllerCreateHeaderParams, ProdutoControllerCreate201, ProdutoControllerCreate400, ProdutoControllerCreate409, ProdutoControllerCreateMutationRequest, ProdutoControllerCreateMutationResponse } from "../types/ProdutoControllerCreate.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { createProdutoDtoSchema } from "./createProdutoDtoSchema.ts";
import { produtoSchema } from "./produtoSchema.ts";
import { z } from "zod";

export const produtoControllerCreateHeaderParamsSchema = z.object({
      "x-parceiro-id": z.coerce.number().int().describe("ID do parceiro logado")
      }) as unknown as ToZod<ProdutoControllerCreateHeaderParams>

/**
 * @description Produto criado com sucesso
 */
export const produtoControllerCreate201Schema = z.lazy(() => produtoSchema) as unknown as ToZod<ProdutoControllerCreate201>

/**
 * @description Dados inválidos
 */
export const produtoControllerCreate400Schema = z.unknown() as unknown as ToZod<ProdutoControllerCreate400>

/**
 * @description Nome do produto já está em uso nesta organização
 */
export const produtoControllerCreate409Schema = z.unknown() as unknown as ToZod<ProdutoControllerCreate409>

export const produtoControllerCreateMutationRequestSchema = z.lazy(() => createProdutoDtoSchema) as unknown as ToZod<ProdutoControllerCreateMutationRequest>

export const produtoControllerCreateMutationResponseSchema = z.lazy(() => produtoControllerCreate201Schema) as unknown as ToZod<ProdutoControllerCreateMutationResponse>
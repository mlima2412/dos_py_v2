/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { ProdutoControllerActivatePathParams, ProdutoControllerActivateHeaderParams, ProdutoControllerActivate200, ProdutoControllerActivate404, ProdutoControllerActivateMutationResponse } from "../types/ProdutoControllerActivate.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { produtoSchema } from "./produtoSchema.ts";
import { z } from "zod";

export const produtoControllerActivatePathParamsSchema = z.object({
      "publicId": z.string().describe("ID público do produto")
      }) as unknown as ToZod<ProdutoControllerActivatePathParams>

export const produtoControllerActivateHeaderParamsSchema = z.object({
      "x-parceiro-id": z.coerce.number().int().describe("ID do parceiro logado")
      }) as unknown as ToZod<ProdutoControllerActivateHeaderParams>

/**
 * @description Produto ativado com sucesso
 */
export const produtoControllerActivate200Schema = z.lazy(() => produtoSchema) as unknown as ToZod<ProdutoControllerActivate200>

/**
 * @description Produto não encontrado
 */
export const produtoControllerActivate404Schema = z.unknown() as unknown as ToZod<ProdutoControllerActivate404>

export const produtoControllerActivateMutationResponseSchema = z.lazy(() => produtoControllerActivate200Schema) as unknown as ToZod<ProdutoControllerActivateMutationResponse>
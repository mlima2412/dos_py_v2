/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { UpdateClienteDto } from "../types/UpdateClienteDto.ts";
import { z } from "zod/v4";

export const updateClienteDtoSchema = z.object({
    "id": z.optional(z.coerce.number().describe("ID do cliente")),
"publicId": z.optional(z.coerce.string().describe("Public ID do cliente")),
"nome": z.optional(z.coerce.string().describe("Nome do cliente")),
"sobrenome": z.optional(z.coerce.string().describe("Sobrenome do cliente")),
"email": z.optional(z.coerce.string().describe("Email do cliente")),
"redeSocial": z.optional(z.coerce.string().describe("Rede social do cliente")),
"celular": z.optional(z.coerce.string().describe("Celular do cliente")),
"ruccnpj": z.optional(z.coerce.string().describe("RUC/CNPJ do cliente")),
"endereco": z.optional(z.coerce.string().describe("Endereço do cliente")),
"cidade": z.optional(z.coerce.string().describe("Cidade do cliente")),
"cep": z.optional(z.coerce.string().describe("CEP do cliente")),
"observacoes": z.optional(z.coerce.string().describe("Observações sobre o cliente")),
"linguagem": z.optional(z.enum(["Espanol", "Portugues"]).default("Espanol").describe("Linguagem preferida do cliente")),
"ativo": z.optional(z.boolean().default(true).describe("Status ativo do cliente")),
"parceiroId": z.optional(z.coerce.number().describe("ID do parceiro associado")),
"canalOrigemId": z.optional(z.coerce.number().describe("ID do canal de origem")),
"createdAt": z.optional(z.string().datetime().describe("Data de criação do cliente")),
"updatedAt": z.optional(z.string().datetime().describe("Data de atualização do cliente")),
"ultimaCompra": z.optional(z.string().datetime().describe("Data da última compra do cliente"))
    }) as unknown as z.ZodType<UpdateClienteDto>
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { AuthControllerGetUserParceiros200, AuthControllerGetUserParceirosQueryResponse } from '../types/AuthControllerGetUserParceiros.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

/**
 * @description Lista de parceiros do usu√°rio
 */
export const authControllerGetUserParceiros200Schema = z.array(
  z.object({
    id: z.coerce.number().optional(),
    parceiroId: z.coerce.number().optional(),
    Parceiro: z
      .object({
        id: z.coerce.number().optional(),
        publicId: z.coerce.string().optional(),
        nome: z.coerce.string().optional(),
        logourl: z.coerce.string().optional(),
        currencyId: z.coerce.number().optional(),
      })
      .optional(),
    perfil: z
      .object({
        id: z.coerce.number().optional(),
        nome: z.coerce.string().optional(),
      })
      .optional(),
  }),
) as unknown as ToZod<AuthControllerGetUserParceiros200>

export const authControllerGetUserParceirosQueryResponseSchema = z.lazy(
  () => authControllerGetUserParceiros200Schema,
) as unknown as ToZod<AuthControllerGetUserParceirosQueryResponse>

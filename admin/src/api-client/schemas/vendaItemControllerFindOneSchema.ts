/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { VendaItemControllerFindOnePathParams, VendaItemControllerFindOneQueryParams, VendaItemControllerFindOneHeaderParams, VendaItemControllerFindOne200, VendaItemControllerFindOne404, VendaItemControllerFindOneQueryResponse } from "../types/VendaItemControllerFindOne.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { vendaItemEntitySchema } from "./vendaItemEntitySchema.ts";
import { z } from "zod";

export const vendaItemControllerFindOnePathParamsSchema = z.object({
      "id": z.string().describe("ID do item")
      }) as unknown as ToZod<VendaItemControllerFindOnePathParams>

export const vendaItemControllerFindOneQueryParamsSchema = z.object({
      "vendaId": z.string()
      }) as unknown as ToZod<VendaItemControllerFindOneQueryParams>

export const vendaItemControllerFindOneHeaderParamsSchema = z.object({
      "x-parceiro-id": z.coerce.number().int().describe("ID do parceiro logado")
      }) as unknown as ToZod<VendaItemControllerFindOneHeaderParams>

/**
 * @description Item encontrado
 */
export const vendaItemControllerFindOne200Schema = z.lazy(() => vendaItemEntitySchema) as unknown as ToZod<VendaItemControllerFindOne200>

/**
 * @description Item n√£o encontrado
 */
export const vendaItemControllerFindOne404Schema = z.unknown() as unknown as ToZod<VendaItemControllerFindOne404>

export const vendaItemControllerFindOneQueryResponseSchema = z.lazy(() => vendaItemControllerFindOne200Schema) as unknown as ToZod<VendaItemControllerFindOneQueryResponse>
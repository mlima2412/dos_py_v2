/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { AuthControllerLogin200, AuthControllerLogin401, AuthControllerLoginMutationRequest, AuthControllerLoginMutationResponse } from "../types/AuthControllerLogin.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { loginDtoSchema } from "./loginDtoSchema.ts";
import { z } from "zod";

/**
 * @description Login realizado com sucesso
 */
export const authControllerLogin200Schema = z.object({
      "accessToken": z.coerce.string().optional(),
  "user": z.object({
      "id": z.coerce.number().optional(),
  "publicId": z.coerce.string().optional(),
  "nome": z.coerce.string().optional(),
  "email": z.coerce.string().optional(),
  "telefone": z.coerce.string().optional(),
  "ativo": z.boolean().optional(),
  "perfil": z.object({
      "id": z.coerce.number().optional(),
  "nome": z.coerce.string().optional()
      }).optional()
      }).optional()
      }) as unknown as ToZod<AuthControllerLogin200>

/**
 * @description Credenciais inv√°lidas
 */
export const authControllerLogin401Schema = z.unknown() as unknown as ToZod<AuthControllerLogin401>

export const authControllerLoginMutationRequestSchema = z.lazy(() => loginDtoSchema) as unknown as ToZod<AuthControllerLoginMutationRequest>

export const authControllerLoginMutationResponseSchema = z.lazy(() => authControllerLogin200Schema) as unknown as ToZod<AuthControllerLoginMutationResponse>
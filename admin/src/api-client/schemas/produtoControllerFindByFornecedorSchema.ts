/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { ProdutoControllerFindByFornecedorPathParams, ProdutoControllerFindByFornecedorHeaderParams, ProdutoControllerFindByFornecedor200, ProdutoControllerFindByFornecedor404, ProdutoControllerFindByFornecedorQueryResponse } from "../types/ProdutoControllerFindByFornecedor.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { produtoSchema } from "./produtoSchema.ts";
import { z } from "zod";

export const produtoControllerFindByFornecedorPathParamsSchema = z.object({
      "fornecedorPublicId": z.string().describe("ID público do fornecedor")
      }) as unknown as ToZod<ProdutoControllerFindByFornecedorPathParams>

export const produtoControllerFindByFornecedorHeaderParamsSchema = z.object({
      "x-parceiro-id": z.coerce.number().int().describe("ID do parceiro logado")
      }) as unknown as ToZod<ProdutoControllerFindByFornecedorHeaderParams>

/**
 * @description Lista de produtos do fornecedor
 */
export const produtoControllerFindByFornecedor200Schema = z.array(z.lazy(() => produtoSchema)) as unknown as ToZod<ProdutoControllerFindByFornecedor200>

/**
 * @description Fornecedor não encontrado
 */
export const produtoControllerFindByFornecedor404Schema = z.unknown() as unknown as ToZod<ProdutoControllerFindByFornecedor404>

export const produtoControllerFindByFornecedorQueryResponseSchema = z.lazy(() => produtoControllerFindByFornecedor200Schema) as unknown as ToZod<ProdutoControllerFindByFornecedorQueryResponse>
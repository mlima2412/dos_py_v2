/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { ProdutoHistoricoPrecoControllerFindAllQueryParams, ProdutoHistoricoPrecoControllerFindAllHeaderParams, ProdutoHistoricoPrecoControllerFindAll200, ProdutoHistoricoPrecoControllerFindAllQueryResponse } from "../types/ProdutoHistoricoPrecoControllerFindAll.ts";
import { produtoHistoricoPrecoResponseDtoSchema } from "./produtoHistoricoPrecoResponseDtoSchema.ts";
import { z } from "zod/v4";

export const produtoHistoricoPrecoControllerFindAllQueryParamsSchema = z.object({
    "dataInicial": z.optional(z.string().describe("Data inicial para filtro (formato ISO)")),
"dataFinal": z.optional(z.string().describe("Data final para filtro (formato ISO)")),
"limit": z.optional(z.coerce.number().int().min(1).max(100).describe("Limite de registros (máximo 100)"))
    }).optional() as unknown as z.ZodType<ProdutoHistoricoPrecoControllerFindAllQueryParams>

export const produtoHistoricoPrecoControllerFindAllHeaderParamsSchema = z.object({
    "x-parceiro-id": z.coerce.number().int().describe("ID do parceiro logado")
    }) as unknown as z.ZodType<ProdutoHistoricoPrecoControllerFindAllHeaderParams>

/**
 * @description Lista de históricos de preço
 */
export const produtoHistoricoPrecoControllerFindAll200Schema = z.array(produtoHistoricoPrecoResponseDtoSchema) as unknown as z.ZodType<ProdutoHistoricoPrecoControllerFindAll200>

export const produtoHistoricoPrecoControllerFindAllQueryResponseSchema = produtoHistoricoPrecoControllerFindAll200Schema as unknown as z.ZodType<ProdutoHistoricoPrecoControllerFindAllQueryResponse>
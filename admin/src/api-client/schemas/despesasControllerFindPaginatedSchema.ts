/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  DespesasControllerFindPaginatedQueryParams,
  DespesasControllerFindPaginatedHeaderParams,
  DespesasControllerFindPaginated200,
  DespesasControllerFindPaginatedQueryResponse,
} from '../types/DespesasControllerFindPaginated.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { despesaSchema } from './despesaSchema.ts'
import { z } from 'zod'

export const despesasControllerFindPaginatedQueryParamsSchema = z.object({
  page: z.string(),
  limit: z.string(),
  search: z.string(),
  fornecedorId: z.string(),
  subCategoriaId: z.string(),
}) as unknown as ToZod<DespesasControllerFindPaginatedQueryParams>

export const despesasControllerFindPaginatedHeaderParamsSchema = z.object({
  'x-parceiro-id': z.coerce.number().int().describe('ID do parceiro logado'),
}) as unknown as ToZod<DespesasControllerFindPaginatedHeaderParams>

/**
 * @description Lista paginada de despesas retornada com sucesso
 */
export const despesasControllerFindPaginated200Schema = z.object({
  data: z.array(z.lazy(() => despesaSchema)).optional(),
  total: z.coerce.number().describe('Total de registros').optional(),
  page: z.coerce.number().describe('Página atual').optional(),
  limit: z.coerce.number().describe('Itens por página').optional(),
  totalPages: z.coerce.number().describe('Total de páginas').optional(),
}) as unknown as ToZod<DespesasControllerFindPaginated200>

export const despesasControllerFindPaginatedQueryResponseSchema = z.lazy(
  () => despesasControllerFindPaginated200Schema,
) as unknown as ToZod<DespesasControllerFindPaginatedQueryResponse>
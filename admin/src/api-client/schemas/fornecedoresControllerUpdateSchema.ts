/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { FornecedoresControllerUpdatePathParams, FornecedoresControllerUpdate200, FornecedoresControllerUpdate404, FornecedoresControllerUpdate409, FornecedoresControllerUpdateMutationRequest, FornecedoresControllerUpdateMutationResponse } from "../types/FornecedoresControllerUpdate.ts";
import type { ToZod } from "@kubb/plugin-zod/utils";
import { fornecedorSchema } from "./fornecedorSchema.ts";
import { updateFornecedorDtoSchema } from "./updateFornecedorDtoSchema.ts";
import { z } from "zod";

export const fornecedoresControllerUpdatePathParamsSchema = z.object({
      "publicId": z.string().describe("ID público do fornecedor (UUID v7)")
      }) as unknown as ToZod<FornecedoresControllerUpdatePathParams>

/**
 * @description Fornecedor atualizado com sucesso
 */
export const fornecedoresControllerUpdate200Schema = z.lazy(() => fornecedorSchema) as unknown as ToZod<FornecedoresControllerUpdate200>

/**
 * @description Fornecedor não encontrado
 */
export const fornecedoresControllerUpdate404Schema = z.unknown() as unknown as ToZod<FornecedoresControllerUpdate404>

/**
 * @description Email ou RUC/CNPJ já está em uso
 */
export const fornecedoresControllerUpdate409Schema = z.unknown() as unknown as ToZod<FornecedoresControllerUpdate409>

/**
 * @description Dados para atualização do fornecedor
 */
export const fornecedoresControllerUpdateMutationRequestSchema = z.lazy(() => updateFornecedorDtoSchema) as unknown as ToZod<FornecedoresControllerUpdateMutationRequest>

export const fornecedoresControllerUpdateMutationResponseSchema = z.lazy(() => fornecedoresControllerUpdate200Schema) as unknown as ToZod<FornecedoresControllerUpdateMutationResponse>
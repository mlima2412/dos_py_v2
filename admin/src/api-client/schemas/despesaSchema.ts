/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { Despesa } from "../types/Despesa.ts";
import { currencySchema } from "./currencySchema.ts";
import { fornecedorSchema } from "./fornecedorSchema.ts";
import { subCategoriaDespesaSchema } from "./subCategoriaDespesaSchema.ts";
import { z } from "zod/v4";

export const despesaSchema = z.object({
    "id": z.coerce.number().describe("ID único da despesa"),
"publicId": z.coerce.string().describe("ID público da despesa"),
"dataRegistro": z.string().datetime().describe("Data de registro da despesa"),
"valorTotal": z.coerce.number().describe("Valor total da despesa"),
"descricao": z.coerce.string().describe("Descrição da despesa"),
"subCategoriaId": z.coerce.number().describe("ID da subcategoria da despesa"),
"parceiroId": z.coerce.number().describe("ID do parceiro responsável pela despesa"),
"fornecedorId": z.optional(z.coerce.number().describe("ID do fornecedor da despesa")),
"currencyId": z.optional(z.coerce.number().describe("ID da moeda da despesa")),
"cotacao": z.optional(z.coerce.number().describe("Cotação da moeda no momento da despesa")),
get "fornecedor"(){
                return z.optional(fornecedorSchema.describe("Fornecedor da despesa"))
              },
get "subCategoria"(){
                return subCategoriaDespesaSchema.describe("Subcategoria da despesa")
              },
get "currency"(){
                return z.optional(currencySchema.describe("Moeda da despesa"))
              }
    }) as unknown as z.ZodType<Despesa>
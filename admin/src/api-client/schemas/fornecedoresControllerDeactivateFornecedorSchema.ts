/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  FornecedoresControllerDeactivateFornecedorPathParams,
  FornecedoresControllerDeactivateFornecedor200,
  FornecedoresControllerDeactivateFornecedor404,
  FornecedoresControllerDeactivateFornecedorMutationResponse,
} from '../types/FornecedoresControllerDeactivateFornecedor.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { fornecedorSchema } from './fornecedorSchema.ts'
import { z } from 'zod'

export const fornecedoresControllerDeactivateFornecedorPathParamsSchema = z.object({
  publicId: z.string().describe('ID público do fornecedor (UUID v7)'),
}) as unknown as ToZod<FornecedoresControllerDeactivateFornecedorPathParams>

/**
 * @description Fornecedor desativado com sucesso
 */
export const fornecedoresControllerDeactivateFornecedor200Schema = z.lazy(
  () => fornecedorSchema,
) as unknown as ToZod<FornecedoresControllerDeactivateFornecedor200>

/**
 * @description Fornecedor não encontrado
 */
export const fornecedoresControllerDeactivateFornecedor404Schema = z.unknown() as unknown as ToZod<FornecedoresControllerDeactivateFornecedor404>

export const fornecedoresControllerDeactivateFornecedorMutationResponseSchema = z.lazy(
  () => fornecedoresControllerDeactivateFornecedor200Schema,
) as unknown as ToZod<FornecedoresControllerDeactivateFornecedorMutationResponse>
